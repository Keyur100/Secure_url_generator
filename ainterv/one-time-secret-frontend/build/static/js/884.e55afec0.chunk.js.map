{"version":3,"file":"static/js/884.e55afec0.chunk.js","mappings":"0KAEA,MAAMA,EAAW,oCAEJC,EAAeC,gBACHC,EAAAA,EAAMC,KAAKJ,EAAU,CAAEK,YAC9BC,KAGLC,EAAcL,gBACFC,EAAAA,EAAMK,IAAI,GAAGR,KAAYS,MAChCH,I,2ICJH,SAASI,IACtB,MAAM,GAAED,IAAOE,EAAAA,EAAAA,MACRC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCT,EAAQU,IAAaD,EAAAA,EAAAA,UAAS,KAC9BE,EAAOC,IAAYH,EAAAA,EAAAA,UAAS,IAoBnC,OAlBAI,EAAAA,EAAAA,WAAU,KACWhB,WACjB,IACE,MAAMiB,QAAYZ,EAAAA,EAAAA,GAAYE,GAAM,IACpCM,EAAUI,EAAId,OAChB,CAAE,MAAOe,GAAW,IAADC,EAAAC,EACjBL,GACc,QAAZI,EAAAD,EAAIG,gBAAQ,IAAAF,GAAM,QAANC,EAAZD,EAAcf,YAAI,IAAAgB,OAAN,EAAZA,EAAoBN,QACpB,0EAEJ,CAAC,QACCH,GAAW,EACb,GAGFW,IACC,CAACf,KAGFgB,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,SAAS,KAAIC,UACtBC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,UAAW,EAAGC,GAAI,CAAEC,QAAS,EAAGC,UAAW,IAAKN,SAAA,EACrDH,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAT,SAAC,yBAGrChB,GACCa,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,IACftB,GACFS,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,SAAS,QAAOZ,SAAEZ,KAEzBS,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,SAAS,OAAOR,GAAI,CAAES,GAAI,GAAIb,UACnCH,EAAAA,EAAAA,KAACU,EAAAA,EAAU,CAACC,QAAQ,YAAWR,SAAEvB,UAM7C,C","sources":["api.ts","pages/ViewSecret.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE = 'http://localhost:5000/api/secrets';\n\nexport const submitSecret = async (secret: string) => {\n  const response = await axios.post(API_BASE, { secret });\n  return response.data;\n};\n\nexport const fetchSecret = async (id: string) => {\n  const response = await axios.get(`${API_BASE}/${id}`);\n  return response.data;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Container, Typography, CircularProgress, Alert, Paper\n} from '@mui/material';\nimport { fetchSecret } from '../api';\n\nexport default function ViewSecret() {\n  const { id } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [secret, setSecret] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const loadSecret = async () => {\n      try {\n        const res = await fetchSecret(id || '');\n        setSecret(res.secret);\n      } catch (err: any) {\n        setError(\n          err.response?.data?.error ||\n          'Unable to fetch the secret. It may have expired or already been viewed.'\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadSecret();\n  }, [id]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Paper elevation={4} sx={{ padding: 4, marginTop: 10 }}>\n        <Typography variant=\"h5\" gutterBottom>\n          View One-Time Secret\n        </Typography>\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          <Alert severity=\"info\" sx={{ mt: 2 }}>\n            <Typography variant=\"subtitle1\">{secret}</Typography>\n          </Alert>\n        )}\n      </Paper>\n    </Container>\n  );\n}\n"],"names":["API_BASE","submitSecret","async","axios","post","secret","data","fetchSecret","get","id","ViewSecret","useParams","loading","setLoading","useState","setSecret","error","setError","useEffect","res","err","_err$response","_err$response$data","response","loadSecret","_jsx","Container","maxWidth","children","_jsxs","Paper","elevation","sx","padding","marginTop","Typography","variant","gutterBottom","CircularProgress","Alert","severity","mt"],"sourceRoot":""}