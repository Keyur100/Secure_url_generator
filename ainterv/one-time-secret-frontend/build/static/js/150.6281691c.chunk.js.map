{"version":3,"file":"static/js/150.6281691c.chunk.js","mappings":"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","sources":["../node_modules/@mui/styled-engine/esm/GlobalStyles/GlobalStyles.js","../node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/esm/GlobalStyles/GlobalStyles.js","../node_modules/@mui/material/esm/zero-styled/index.js","../node_modules/@mui/material/esm/Typography/typographyClasses.js","../node_modules/@mui/material/esm/Typography/Typography.js","pages/NotFound.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles, internal_serializeStyles as serializeStyles } from '@mui/styled-engine';\nimport useTheme from \"../useTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction wrapGlobalLayer(styles) {\n  const serialized = serializeStyles(styles);\n  if (styles !== serialized && serialized.styles) {\n    if (!serialized.styles.match(/^@layer\\s+[^{]*$/)) {\n      // If the styles are not already wrapped in a layer, wrap them in a global layer.\n      serialized.styles = `@layer global{${serialized.styles}}`;\n    }\n    return serialized;\n  }\n  return styles;\n}\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n  let globalStyles = typeof styles === 'function' ? styles(resolvedTheme) : styles;\n  if (resolvedTheme.modularCssLayers) {\n    if (Array.isArray(globalStyles)) {\n      globalStyles = globalStyles.map(styleArg => {\n        if (typeof styleArg === 'function') {\n          return wrapGlobalLayer(styleArg(resolvedTheme));\n        }\n        return wrapGlobalLayer(styleArg);\n      });\n    } else {\n      globalStyles = wrapGlobalLayer(globalStyles);\n    }\n  }\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from \"../styles/defaultTheme.js\";\nimport THEME_ID from \"../styles/identifier.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, {\n    ...props,\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","import * as React from 'react';\nimport { extendSxProp } from '@mui/system/styleFunctionSx';\nimport useTheme from \"../styles/useTheme.js\";\nimport GlobalStyles from \"../GlobalStyles/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport { css, keyframes } from '@mui/system';\nexport { default as styled } from \"../styles/styled.js\";\nexport function globalCss(styles) {\n  return function GlobalStylesWrapper(props) {\n    return (\n      /*#__PURE__*/\n      // Pigment CSS `globalCss` support callback with theme inside an object but `GlobalStyles` support theme as a callback value.\n      _jsx(GlobalStyles, {\n        styles: typeof styles === 'function' ? theme => styles({\n          theme,\n          ...props\n        }) : styles\n      })\n    );\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function internal_createExtendSxProp() {\n  return extendSxProp;\n}\nexport { useTheme };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, internal_createExtendSxProp } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getTypographyUtilityClass } from \"./typographyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst extendSxProp = internal_createExtendSxProp();\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  variants: [{\n    props: {\n      variant: 'inherit'\n    },\n    style: {\n      // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n      font: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  }, ...Object.entries(theme.typography).filter(([variant, value]) => variant !== 'inherit' && value && typeof value === 'object').map(([variant, value]) => ({\n    props: {\n      variant\n    },\n    style: value\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette?.text || {}).filter(([, value]) => typeof value === 'string').map(([color]) => ({\n    props: {\n      color: `text${capitalize(color)}`\n    },\n    style: {\n      color: (theme.vars || theme).palette.text[color]\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.align !== 'inherit',\n    style: {\n      textAlign: 'var(--Typography-textAlign)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.noWrap,\n    style: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.gutterBottom,\n    style: {\n      marginBottom: '0.35em'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.paragraph,\n    style: {\n      marginBottom: 16\n    }\n  }]\n})));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const {\n    color,\n    ...themeProps\n  } = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const isSxColor = !v6Colors[color];\n  // TODO: Remove `extendSxProp` in v7\n  const props = extendSxProp({\n    ...themeProps,\n    ...(isSxColor && {\n      color\n    })\n  });\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  };\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, {\n    as: Component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    style: {\n      ...(align !== 'inherit' && {\n        '--Typography-textAlign': align\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   * @deprecated Use the `component` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import React from 'react';\nimport { Box, Typography } from '@mui/material';\n\nexport default function NotFound() {\n  return (\n    <Box textAlign=\"center\" mt={10}>\n      <Typography variant=\"h4\" gutterBottom>\n        404 - Page Not Found\n      </Typography>\n      <Typography variant=\"body1\">\n        Sorry, the page you are looking for does not exist.\n      </Typography>\n    </Box>\n  );\n}\n"],"names":["GlobalStyles","props","styles","defaultTheme","globalStyles","themeInput","undefined","obj","Object","keys","length","_jsx","Global","wrapGlobalLayer","serialized","serializeStyles","match","_ref","themeId","upperTheme","useTheme","resolvedTheme","modularCssLayers","Array","isArray","map","styleArg","MuiGlobalStyles","SystemGlobalStyles","THEME_ID","globalCss","theme","internal_createExtendSxProp","extendSxProp","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","TypographyRoot","styled","name","overridesResolver","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","memoTheme","margin","variants","style","font","lineHeight","letterSpacing","entries","typography","filter","_ref2","value","_ref3","palette","createSimplePaletteValueFilter","_ref4","color","vars","main","text","_ref5","_ref6","_ref7","textAlign","_ref8","overflow","textOverflow","whiteSpace","_ref9","marginBottom","_ref0","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","React","inProps","ref","themeProps","useDefaultProps","className","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx","NotFound","_jsxs","Box","mt","children","Typography"],"sourceRoot":""}